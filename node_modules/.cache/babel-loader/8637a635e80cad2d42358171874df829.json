{"ast":null,"code":"var _jsxFileName = \"/Users/isabelngan/Desktop/uclacode/Homework/week19/GOT-memory-game/src/components/GameBoard/index.js\";\nimport React, { Component } from \"react\";\nimport Card from './components/Card';\nimport './style.css';\nlet topScore = 0;\nlet guessesCorrect = 0;\nlet hearts = 0;\nlet message = \"\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Characters,\n      topScore,\n      guessesCorrect,\n      message,\n      hearts\n    };\n\n    this.setClicked = id => {\n      const Characters = this.state.Characters;\n      const cardClicked = Characters.filter(Character => Character.id === id);\n\n      if (cardClicked[0].clicked) {\n        guessesCorrect = 0;\n        message = 'Whoops. Start over'; // change to map or smth?\n\n        for (let i = 0; i < Characters.length; i++) {\n          Characters[i].clicked = false;\n        }\n\n        this.setState({\n          message\n        });\n        this.setState({\n          guessesCorrect\n        });\n        this.setState({\n          Characters\n        });\n      } else {\n        cardClicked[0].clicked = true;\n        guessesCorrect = guessesCorrect + 4;\n        message = \"Good Job!\";\n\n        if (guessesCorrect > topScore) {\n          topScore = guessesCorrect;\n          hearts++;\n          this.setState({\n            hearts\n          });\n          this.setState({\n            topScore\n          });\n          this.renderHearts();\n        }\n\n        Characters.sort((a, b) => {\n          return 0.5 - Math.random();\n        });\n        this.setState({\n          Characters\n        });\n        this.setState({\n          guessesCorrect\n        });\n        this.setState({\n          message\n        });\n      }\n    };\n  }\n\n  renderHearts() {\n    let divs = [];\n\n    for (let i = 0; i < this.state.hearts; i++) {\n      divs.push(React.createElement(\"div\", {\n        key: i,\n        className: \"heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, divs);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"heroText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"The Legend of Zelda Click Game\"), React.createElement(\"h3\", {\n      className: \"rules\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Save Hyrule! Choose wisely.\"), React.createElement(\"h3\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.message)), React.createElement(\"div\", {\n      className: \"buttonWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"buttons\",\n      src: \"images/buttons.png\",\n      alt: \"zelda buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"heartWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.renderHearts(), React.createElement(Line, {\n      className: \"progress-bar\",\n      percent: this.state.guessesCorrect,\n      trailWidth: \"8\",\n      strokeWidth: \"8\",\n      strokeColor: \"#87df6f\",\n      strokeLinecap: \"square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.Characters.map(Character => React.createElement(Card, {\n      setClicked: this.setClicked,\n      id: Character.id,\n      key: Character.id,\n      image: Character.image,\n      name: Character.name,\n      className: \"col-sm-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/isabelngan/Desktop/uclacode/Homework/week19/GOT-memory-game/src/components/GameBoard/index.js"],"names":["React","Component","Card","topScore","guessesCorrect","hearts","message","App","state","Characters","setClicked","id","cardClicked","filter","Character","clicked","i","length","setState","renderHearts","sort","a","b","Math","random","divs","push","render","map","image","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from './components/Card';\nimport './style.css';\n\nlet topScore = 0;\nlet guessesCorrect = 0;\nlet hearts = 0;\nlet message = \"\";\n\nclass App extends Component {\n\n\tstate = {\n\t\tCharacters,\n\t\ttopScore,\n\t\tguessesCorrect,\n\t\tmessage, \n\t\thearts\n\t};\n\n\tsetClicked = id => {\n\t\tconst Characters = this.state.Characters;\n\t\tconst cardClicked = Characters.filter(Character => Character.id === id);\n\n\t\tif (cardClicked[0].clicked) {\n\n\t\t\tguessesCorrect = 0;\n\t\t\tmessage = 'Whoops. Start over';\n\n\t\t\t// change to map or smth?\n\t\t\tfor (let i = 0; i < Characters.length; i++) {\n\t\t\t\tCharacters[i].clicked = false;\n\t\t\t}\n\n\t\t\tthis.setState({message});\n\t\t\tthis.setState({guessesCorrect});\n\t\t\tthis.setState({Characters});\n\n\t\t} else {\n\t\t\tcardClicked[0].clicked = true;\n\n\t\t\tguessesCorrect = guessesCorrect + 4;\n\t\t\tmessage = \"Good Job!\"\n\n\t\t\tif (guessesCorrect > topScore) {\n\t\t\t\ttopScore = guessesCorrect;\n\t\t\t\thearts++;\n\t\t\t\tthis.setState({hearts});\n\t\t\t\tthis.setState({topScore});\n\t\t\t\tthis.renderHearts();\n\t\t\t}\n\n\t\t\tCharacters.sort((a, b) => {\n\t\t\t\treturn 0.5 - Math.random();\n\t\t\t});\n\n\t\t\tthis.setState({Characters});\n\t\t\tthis.setState({guessesCorrect});\n\t\t\tthis.setState({message});\n\t\t}\n\t};\n\n\trenderHearts() {\n\t\tlet divs = [];\n\n\t\tfor (let i = 0; i < this.state.hearts; i++) {\n\t\t\tdivs.push(<div key={i} className=\"heart\"></div>);\n\t\t}\n\n\t\treturn <div>{divs}</div>;\n\t};\n\n    render() {\n\n        return ( \n        \t<Wrapper>\n    \t\t\t<div className=\"hero\">\n    \t\t\t\t<div className=\"heroText\">\n    \t\t\t\t\t<h1 className=\"banner\">The Legend of Zelda Click Game</h1>\n        \t\t\t\t<h3 className=\"rules\">Save Hyrule! Choose wisely.</h3>\n        \t\t\t\t<h3 className=\"message\">{this.state.message}</h3>\n    \t\t\t\t</div>\n    \t\t\t\t<div className=\"buttonWrapper\">\n    \t\t\t\t\t<img className=\"buttons\" src=\"images/buttons.png\" alt=\"zelda buttons\" />\n    \t\t\t\t</div>\n\t\t\t\t\t<div className=\"heartWrapper\">\n    \t\t\t\t{this.renderHearts()}\n    \t\t\t\t<Line \n\t\t\t\t\t\tclassName=\"progress-bar\"\n\t        \t\t\tpercent={this.state.guessesCorrect}\n\t        \t\t\ttrailWidth=\"8\" \n\t        \t\t\tstrokeWidth=\"8\" \n\t        \t\t\tstrokeColor=\"#87df6f\"\n\t\t\t\t\t\tstrokeLinecap=\"square\" />\n    \t\t\t\t</div>\n    \t\t\t</div>\n            \t<div className=\"row\">\n            \t\t{this.state.Characters.map(Character => (\n            \t\t\t<Card\n            \t\t\t\tsetClicked={this.setClicked}\n            \t\t\t\tid={Character.id}\n            \t\t\t\tkey={Character.id}\n            \t\t\t\timage={Character.image}\n            \t\t\t\tname={Character.name}\n            \t\t\t\tclassName=\"col-sm-1\"\n            \t\t\t/>\n            \t\t))}\n            \t</div>\n            </Wrapper>\n        );\n    }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}